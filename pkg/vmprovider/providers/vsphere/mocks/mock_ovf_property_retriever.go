// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vmware-tanzu/vm-operator/pkg/vmprovider/providers/vsphere (interfaces: OvfPropertyRetriever)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	ovf "github.com/vmware/govmomi/ovf"
	library "github.com/vmware/govmomi/vapi/library"
	vsphere "github.com/vmware-tanzu/vm-operator/pkg/vmprovider/providers/vsphere"
	resources "github.com/vmware-tanzu/vm-operator/pkg/vmprovider/providers/vsphere/resources"
	reflect "reflect"
)

// MockOvfPropertyRetriever is a mock of OvfPropertyRetriever interface
type MockOvfPropertyRetriever struct {
	ctrl     *gomock.Controller
	recorder *MockOvfPropertyRetrieverMockRecorder
}

// MockOvfPropertyRetrieverMockRecorder is the mock recorder for MockOvfPropertyRetriever
type MockOvfPropertyRetrieverMockRecorder struct {
	mock *MockOvfPropertyRetriever
}

// NewMockOvfPropertyRetriever creates a new mock instance
func NewMockOvfPropertyRetriever(ctrl *gomock.Controller) *MockOvfPropertyRetriever {
	mock := &MockOvfPropertyRetriever{ctrl: ctrl}
	mock.recorder = &MockOvfPropertyRetrieverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOvfPropertyRetriever) EXPECT() *MockOvfPropertyRetrieverMockRecorder {
	return m.recorder
}

// GetOvfInfoFromLibraryItem mocks base method
func (m *MockOvfPropertyRetriever) GetOvfInfoFromLibraryItem(arg0 context.Context, arg1 *vsphere.Session, arg2 *library.Item) (*ovf.Envelope, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOvfInfoFromLibraryItem", arg0, arg1, arg2)
	ret0, _ := ret[0].(*ovf.Envelope)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOvfInfoFromLibraryItem indicates an expected call of GetOvfInfoFromLibraryItem
func (mr *MockOvfPropertyRetrieverMockRecorder) GetOvfInfoFromLibraryItem(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOvfInfoFromLibraryItem", reflect.TypeOf((*MockOvfPropertyRetriever)(nil).GetOvfInfoFromLibraryItem), arg0, arg1, arg2)
}

// GetOvfInfoFromVM mocks base method
func (m *MockOvfPropertyRetriever) GetOvfInfoFromVM(arg0 context.Context, arg1 *resources.VirtualMachine) (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOvfInfoFromVM", arg0, arg1)
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOvfInfoFromVM indicates an expected call of GetOvfInfoFromVM
func (mr *MockOvfPropertyRetrieverMockRecorder) GetOvfInfoFromVM(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOvfInfoFromVM", reflect.TypeOf((*MockOvfPropertyRetriever)(nil).GetOvfInfoFromVM), arg0, arg1)
}
